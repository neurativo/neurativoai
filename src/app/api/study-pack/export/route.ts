import { NextRequest, NextResponse } from 'next/server';
import { buildStudyPackPdf } from '@/app/lib/pdf/templates/studyPackTemplate';
import { getSupabaseServer } from '@/lib/supabase';

export async function POST(request: NextRequest) {
  try {
    const { studyPack } = await request.json();
    if (!studyPack) {
      return NextResponse.json({ error: 'Missing studyPack' }, { status: 400 });
    }

    // Determine plan for watermark option
    let watermarkText: string | null = 'Generated by Neurativo';
    try {
      const supabase = getSupabaseServer();
      const { data: { user } } = await supabase.auth.getUser();
      if (user) {
        const { data: subscription } = await supabase
          .from('user_subscriptions')
          .select('subscription_plans!inner(name)')
          .eq('user_id', user.id)
          .eq('status', 'active')
          .order('created_at', { ascending: false })
          .limit(1)
          .maybeSingle();
        const plan = (subscription?.subscription_plans as any)?.name?.toLowerCase();
        if (plan === 'mastery' || plan === 'innovation') {
          watermarkText = null; // remove watermark on higher tiers
        }
      }
    } catch {}

    const pdfBytes = await buildStudyPackPdf(studyPack, {
      appName: 'Neurativo',
      brandPrimary: { r: 90, g: 60, b: 255 },
      brandSecondary: { r: 64, g: 160, b: 255 },
      watermarkText
    });
    return new NextResponse(Buffer.from(pdfBytes), {
      status: 200,
      headers: {
        'Content-Type': 'application/pdf',
        'Content-Disposition': 'attachment; filename="study-pack.pdf"'
      }
    });

  } catch (error) {
    console.error('Failed to export study pack PDF:', error);
    console.error('Error details:', error instanceof Error ? error.message : String(error));
    console.error('Stack trace:', error instanceof Error ? error.stack : '');
    return NextResponse.json({ 
      error: 'Failed to export study pack',
      details: error instanceof Error ? error.message : String(error)
    }, { status: 500 });
  }
}


